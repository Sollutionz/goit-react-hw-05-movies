{"version":3,"file":"static/js/183.fd5c80fe.chunk.js","mappings":"sPACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAkF,kBAAlF,EAA2G,mBAA3G,EAAqI,mB,SCItH,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAeJ,GAFjB,OAEXK,EAFW,OAGjBN,EAAQM,GAHS,gDAKjBC,MAAM,yCAAD,OAA0C,KAAMC,UALpC,yDAAH,qDAQlBJ,GACD,GAAE,CAACH,KAEF,8BACmB,IAAhBF,EAAKU,QACJ,0EAEA,eAAIC,UAAWC,EAAf,SACGZ,EAAKa,KAAI,WAAwCC,GAAO,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,UAC/BC,EAAQJ,EAAKD,EACXM,EAASJ,EAAY,yCACWA,GAClC,0DACJ,OACE,gBAAgBL,UAAWC,EAA3B,WACE,gBAAKS,IAAKD,EAAQE,IAAKL,EAAMN,UAAWC,KACxC,eAAID,UAAWC,EAAf,SAA0BK,KAC1B,cAAGN,UAAWC,EAAd,SAAyBM,MAHlBC,EAMZ,OAKV,C,sLCvCKI,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHc,+BAIdC,OAAQ,CACNC,QAAS,sCAIAC,EAAmB,mCAAG,4FACd,QACC,MAFa,SAGVL,EAASM,IAAT,oBAFJ,QAEI,YADH,QAFa,cAG3BC,EAH2B,OAIzBvB,EAASuB,EAATvB,KAJyB,kBAK1BA,EAAKwB,SALqB,2CAAH,qDAQnBC,EAAe,mCAAG,WAAMjB,GAAN,yFACNQ,EAASM,IAAT,gBAAsBd,IADhB,cACvBe,EADuB,OAErBvB,EAASuB,EAATvB,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMf0B,EAAgB,mCAAG,WAAMlB,GAAN,yFACPQ,EAASM,IAAT,gBAAsBd,EAAtB,aADO,cACxBe,EADwB,OAEtBvB,EAASuB,EAATvB,KAFsB,kBAGvBA,EAAKwB,SAHkB,2CAAH,sDAMhBzB,EAAc,mCAAG,WAAMS,GAAN,yFACLQ,EAASM,IAAT,gBAAsBd,EAAtB,aADK,cACtBe,EADsB,OAEpBvB,EAASuB,EAATvB,KAFoB,kBAGrBA,EAAKP,MAHgB,2CAAH,sDAMdkC,EAAkB,mCAAG,WAAMC,GAAN,yFACTZ,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAES,MAAAA,KAFoB,cAC1BL,EAD0B,OAIxBvB,EAASuB,EAATvB,KAJwB,kBAKzBA,EAAKwB,SALoB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","services/MoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__tTjpY\",\"listItem\":\"Cast_listItem__+2bpf\",\"img\":\"Cast_img__WXmA+\",\"name\":\"Cast_name__dC+34\",\"char\":\"Cast_char__n9z-p\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/MoviesAPI';\nimport css from './Cast.module.css'\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const data = await fetchMovieCast(movieId);\n        setCast(data);\n      } catch (error) {\n        alert(`Oops, some error occurred... Message: ${error.message}`);\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n  return (\n    <>\n      {cast.length === 0 ? (\n        <p>Sorry we have no information about the actors</p>\n      ) : (\n        <ul className={css.list}>\n          {cast.map(({ id, profile_path, name, character }, i) => {\n            let newId = id * i;\n            const poster = profile_path\n              ? `https://image.tmdb.org/t/p/w185${profile_path}`\n              : 'https://via.placeholder.com/185x278?text=Sorry+No+Photo';\n            return (\n              <li key={newId} className={css.listItem}>\n                <img src={poster} alt={name} className={css.img} />\n                <h3 className={css.name}>{name}</h3>\n                <p className={css.char}>{character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst MovieAPI = axios.create({\n  baseURL: API_URL,\n  params: {\n    api_key: 'fc6e97341dc9ad67e721468f18ba1521',\n  },\n});\n\nexport const fetchTrandingMovies = async () => {\n  const media_type = 'movie';\n  const time_window = 'day';\n  const response = await MovieAPI.get(`/trending/${media_type}/${time_window}`);\n  const { data } = response;\n  return data.results;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await MovieAPI.get(`movie/${id}`);\n  const { data } = response;\n  return data;\n};\n\nexport const fetchMovieReview = async id => {\n  const response = await MovieAPI.get(`movie/${id}/reviews`);\n  const { data } = response;\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await MovieAPI.get(`movie/${id}/credits`);\n  const { data } = response;\n  return data.cast;\n};\n\nexport const fetchMovieBySearch = async query => {\n  const response = await MovieAPI.get('/search/movie', {\n    params: { query },\n  });\n  const { data } = response;        \n  return data.results;\n};\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","fetchMovieCast","data","alert","message","length","className","css","map","i","id","profile_path","name","character","newId","poster","src","alt","MovieAPI","axios","baseURL","params","api_key","fetchTrandingMovies","get","response","results","fetchMoviesById","fetchMovieReview","fetchMovieBySearch","query"],"sourceRoot":""}